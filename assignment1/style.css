/*mycolour.space has gradients you can create so i used it for my background*/
body {
  background-image: linear-gradient(
    to right,
    #36ece1,
    #2ed8e3,
    #41c4de,
    #58afd1,
    #689bbe,
    #689bbe,
    #689bbe,
    #689bbe,
    #58afd1,
    #41c4de,
    #2ed8e3,
    #36ece1
  );
  text-align: start;
  margin: auto;
  color: #36ece1;
  font-family: "Roboto", sans-serif;
}
/*wanted my h1 to be in the top at the middle - had to specify to have it at the top in the middle*/
h1 {
  font-size: 3.5rem;
  font-weight: 700;
  margin-bottom: 20px;
  text-align: center;
}
/*I */
h3 {
  font-size: 1.5rem;
  font-weight: bold;
}
/*styling for header, so it applies to both the child elements cutting down on code and making the code more readable. 
couldn't get the box to center so i googled it and setting margin to auto worked. also added some padding to the left, 
right and top so that it would look more centered.*/
#header {
  display: flex;
  justify-content: center;
  /*this aligns text to it's baseline*/
  align-items: baseline;
  width: fit-content;
  gap: 50px;
  padding-left: 5px;
  padding-right: 5px;
  padding-top: 20px;
  font-family: "Black Han Sans", sans-serif;
  font-weight: 400;
  font-style: normal;
  color: #545479;
  border: 3px solid black;
  background-color: #36ece1;
  /*this automatically distributes the space between the edge of the site so the header flex box is centered*/
  margin: auto;
  border-radius: 15px;
}
/*used a flexbox since i knew i would only want to place items in a single column, I prefered the look of the clickable 
text to be in the middle instead of aligned to the right so i had to change it here*/
/*added rounding to the corners, found on the css page of w3 schools*/
.pic {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  grid-row: 1/1;
  grid-column: 1/4;
  background-color: #545479;
  text-align: center;
  border: 3px solid black;
  padding: 6px;
  border-radius: 15px;
  /*width: fit-content;*/
}
/*made the numbers for the list stand out more so it's easier on the eyes*/
.bold {
  font-weight: bold;
  font-size: 1.1rem;
}
/*this is my set up for the grid, i went with a 3x6 because I felt like it made the most sense layout wise especially for question 2.
this let me display the questions on the last row without any gaps and present the text within each box in a more readable manner. */
#questions {
  padding: 10px;
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(6, auto);
  justify-content: start;
}

/*used a class since i wanted all the questions to be styled the same*/
.q {
  border: 3px solid black;
  padding: 6px;
  background-color: #545479;
  border-radius: 15px;
}
/*set the position next to question 1 and gave it enough space to fit all the information. 
I only need to style the parent to make the list and disclaimer styled in the same way so i
saved space and only styled the parent.
Since the text from both the children flex boxs were too close to each other, which made it 
hard to read i gave it a gap to seperate them*/
#q2 {
  display: flex;
  gap: 10px;
  grid-row: 2/3;
  grid-column: 2/4;
  border: 3px solid black;
  padding: 10px;
  background-color: #545479;
  border-radius: 15px;
}
/*Originally had an ordered list but the nunmbers stuck out of the box, so I removed the numbers and added them back 
manually*/
ol {
  list-style-type: none;
}
/*positioning for question 9 and the video, made a horizontal flexbox*/
#q9 {
  display: flex;
  flex-direction: row;
  align-items: start;
  justify-content: left;
  grid-row: 5/5;
  grid-column: 1/3;
  background-color: #545479;
  text-align: left;
  border: 3px solid black;
  padding: 6px;
  gap: 90px;
  border-radius: 15px;
}
